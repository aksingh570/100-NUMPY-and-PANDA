import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Load dataset
data = pd.read_csv('titanic.csv')

# Data overview
print(data.info())
print(data.isnull().sum())

# Data cleaning
data['Age'].fillna(data['Age'].median(), inplace=True)
data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)
data.drop(columns=['Cabin'], inplace=True)
data.drop(columns=['PassengerId', 'Name', 'Ticket'], inplace=True)

# Encode categorical features
encoder = LabelEncoder()
data['Sex'] = encoder.fit_transform(data['Sex'])
data['Embarked'] = encoder.fit_transform(data['Embarked'])

# Visualizations
plt.figure(figsize=(6, 4))
sns.countplot(data=data, x='Survived', hue='Sex')
plt.title('Survival by Gender')
plt.tight_layout()
plt.show()

plt.figure(figsize=(6, 4))
sns.histplot(data['Age'], bins=30, kde=True)
plt.title('Passenger Age Distribution')
plt.tight_layout()
plt.show()

# Feature-target split
features = data.drop(columns='Survived')
target = data['Survived']

# Training and testing
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=1)

# Model training
classifier = LogisticRegression(max_iter=1000)
classifier.fit(X_train, y_train)

# Evaluation
predictions = classifier.predict(X_test)
print("Model Accuracy:", accuracy_score(y_test, predictions))
print("Confusion Matrix:\n", confusion_matrix(y_test, predictions))
print("Classification Report:\n", classification_report(y_test, predictions))
